name: Ludo Game Socket CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SUDO_PASS: ${{ secrets.LUDO_SSH_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H 20.169.153.179 >> ~/.ssh/known_hosts

      - name: Create deployment archive
        run: |
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          git archive --format=tar HEAD | gzip > deploy.tar.gz

      - name: Upload and deploy to server
        run: |
          scp -i ~/.ssh/deploy_key deploy.tar.gz ludo@20.169.153.179:/tmp/deploy_temp.tar.gz

          ssh -i ~/.ssh/deploy_key ludo@20.169.153.179 "bash -s" <<'EOF'
            set -ex

            export SUDO_PASS="${{ secrets.LUDO_SSH_PASSWORD }}"
            SUDO="echo \$SUDO_PASS | sudo -S"

            # Setup temp directory
            rm -rf /tmp/deploy_temp
            mkdir -p /tmp/deploy_temp
            tar -xzf /tmp/deploy_temp.tar.gz -C /tmp/deploy_temp

            # File verification - using simpler count method
            echo "=== Files in deployment package ==="
            ls -la /tmp/deploy_temp
            FILE_COUNT=\$(find /tmp/deploy_temp -type f | wc -l)
            echo "Total files: \$FILE_COUNT"

            # Backup current deployment
            TIMESTAMP=\$(date +%Y%m%d_%H%M%S)
            \$SUDO mkdir -p /var/opt/sockets/backups
            \$SUDO tar -czf /var/opt/sockets/backups/backup_\${TIMESTAMP}.tar.gz -C /var/opt/sockets .

            # Preserve .env
            if [ -f "/var/opt/sockets/.env" ]; then
              cp /var/opt/sockets/.env /tmp/deploy_temp/
              echo "Preserved existing .env file"
            fi

            # Sync files
            echo "=== Syncing files ==="
            \$SUDO rsync -avc --delete \
              --exclude="backups" \
              --exclude=".env" \
              /tmp/deploy_temp/ /var/opt/sockets/

            # Verify sync
            echo "=== Files in production ==="
            \$SUDO ls -la /var/opt/sockets
            PROD_FILE_COUNT=\$(\$SUDO find /var/opt/sockets -type f | wc -l)
            echo "Total files in production: \$PROD_FILE_COUNT"

            # Install dependencies
            cd /var/opt/sockets
            \$SUDO composer install --no-dev --optimize-autoloader

            # Set permissions
            \$SUDO chown -R www-data:www-data /var/opt/sockets
            \$SUDO chmod -R 755 /var/opt/sockets

            # Restart service
            \$SUDO supervisorctl restart gamesocket

            # Cleanup
            rm -rf /tmp/deploy_temp /tmp/deploy_temp.tar.gz
            echo "Deployment completed successfully"
          EOF