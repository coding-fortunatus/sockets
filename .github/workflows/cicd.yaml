name: Ludo Game Socket CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Add server to known_hosts
          ssh-keyscan -H 20.169.153.179 >> ~/.ssh/known_hosts
          
          # Test connection with explicit key usage
          ssh -o IdentitiesOnly=yes -i ~/.ssh/deploy_key ludo@20.169.153.179 "echo 'SSH connection successful'"
          
      - name: Deploy to production
        run: |
          # Create archive
          tar --exclude='.git' --exclude='node_modules' --exclude='.github' -czf deploy.tar.gz .
          
          # Transfer files with explicit key usage
          scp -o IdentitiesOnly=yes -i ~/.ssh/deploy_key deploy.tar.gz ludo@20.169.153.179:/tmp/
          
          # Execute deployment commands
          ssh -o IdentitiesOnly=yes -i ~/.ssh/deploy_key ludo@20.169.153.179 << 'EOF'
            set -ex
            
            # Create deployment directory
            sudo mkdir -p /var/opt/sockets
            sudo mkdir -p /var/opt/sockets/backups
            
            # Backup existing deployment
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            sudo tar -czf /var/opt/sockets/backups/backup_${TIMESTAMP}.tar.gz -C /var/opt/sockets .
            
            # Extract new files
            sudo tar -xzf /tmp/deploy.tar.gz -C /var/opt/sockets
            
            # Preserve environment file if exists
            if [ -f "/var/opt/sockets/.env" ]; then
              sudo cp /var/opt/sockets/.env /var/opt/sockets/.env.bak
            fi
            
            # Set permissions
            sudo chown -R www-data:www-data /var/opt/sockets
            sudo chmod -R 755 /var/opt/sockets
            
            # Install dependencies
            cd /var/opt/sockets
            sudo composer install --no-dev --optimize-autoloader
            
            # Restart services
            sudo supervisorctl update
            sudo supervisorctl restart gamesocket || sudo supervisorctl restart all
            
            # Cleanup
            sudo rm -f /tmp/deploy.tar.gz
            echo "Deployment completed successfully"
          EOF